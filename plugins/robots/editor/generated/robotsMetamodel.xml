<?xml version="1.0" encoding="utf-8"?>
<metamodel xmlns="http://schema.real.com/schema/" version="3.0.2.1">
	<include>../../../commonMetamodels/kernelMetamodel.xml</include>
	<include>../../../commonMetamodels/basicBehaviorsMetamodel.xml</include>
	<include>../../../commonMetamodels/basicActionsMetamodel.xml</include>
	<namespace>UML 2.0</namespace>
	<diagram displayedName="Robot`s Behaviour Diagram" nodeName="RobotsDiagramGroup" name="RobotsDiagram">
		<nonGraphicTypes>
			<enum name="NxtSensorPort">
				<value name="1" displayedName="1"/>
				<value name="2" displayedName="2"/>
				<value name="3" displayedName="3"/>
				<value name="4" displayedName="4"/>
			</enum>
			<enum name="TrikV6SensorPort">
				<value name="A1"/>
				<value name="A2"/>
				<value name="A3"/>
				<value name="A4"/>
				<value name="A5"/>
				<value name="A6"/>
				<value name="D1"/>
				<value name="D2"/>
				<value name="F1"/>
			</enum>
			<enum name="TrikV6DigitalSensorPort">
				<value name="D1"/>
				<value name="D2"/>
			</enum>
			<enum name="TrikV6AnalogSensorPort">
				<value name="A1"/>
				<value name="A2"/>
				<value name="A3"/>
				<value name="A4"/>
				<value name="A5"/>
				<value name="A6"/>
			</enum>
			<enum name="GuardType" editable="true">
				<value name="iteration" displayedName="iteration"/>
				<value name="true" displayedName="true"/>
				<value name="false" displayedName="false"/>
			</enum>
			<enum name="Color">
				<value name="black" displayedName="black"/>
				<value name="blue" displayedName="blue"/>
				<value name="green" displayedName="green"/>
				<value name="yellow" displayedName="yellow"/>
				<value name="red" displayedName="red"/>
				<value name="white" displayedName="white"/>
			</enum>
			<enum name="DistanceSign">
				<value name="greater" displayedName="greater"/>
				<value name="less" displayedName="less"/>
				<value name="notLess" displayedName="not less"/>
				<value name="notGreater" displayedName="not greater"/>
			</enum>
			<enum name="Accelerations">
				<value name="xAxis" displayedName="x-axis"/>
				<value name="yAxis" displayedName="y-axis"/>
				<value name="zAxis" displayedName="z-axis"/>
				<value name="normal" displayedName="norm"/>
			</enum>
			<enum name="BreakEngineMode">
				<value name="break" displayedName="break"/>
				<value name="float" displayedName="float"/>
			</enum>
			<enum name="LedColor">
				<value name="green" displayedName="green"/>
				<value name="red" displayedName="red"/>
				<value name="off" displayedName="off"/>
				<value name="orange" displayedName="orange"/>
			</enum>
			<enum name="BackgroundColor">
				<value name="white" displayedName="white"/>
				<value name="black" displayedName="black"/>
				<value name="red" displayedName="red"/>
				<value name="darkRed" displayedName="dark red"/>
				<value name="green" displayedName="green"/>
				<value name="darkGreen" displayedName="dark green"/>
				<value name="blue" displayedName="blue"/>
				<value name="darkBlue" displayedName="dark blue"/>
				<value name="cyan" displayedName="cyan"/>
				<value name="darkCyan" displayedName="dark cyan"/>
				<value name="magenta" displayedName="magenta"/>
				<value name="darkMagenta" displayedName="dark magenta"/>
				<value name="yellow" displayedName="yellow"/>
				<value name="darkYellow" displayedName="dark yellow"/>
				<value name="gray" displayedName="gray"/>
				<value name="darkGray" displayedName="dark gray"/>
				<value name="lightGray" displayedName="light gray"/>
			</enum>
			<enum name="VideoSensor">
				<value name="line" displayedName="Line sensor"/>
				<value name="object" displayedName="Object sensor"/>
				<value name="color" displayedName="Color sensor"/>
			</enum>
			<enum name="DetectableVideoSensor">
				<value name="line" displayedName="Line sensor"/>
				<value name="object" displayedName="Object sensor"/>
			</enum>
			<enum name="TrikButtons">
				<value name="Up"/>
				<value name="Down"/>
				<value name="Left"/>
				<value name="Right"/>
				<value name="Enter"/>
				<value name="Esc"/>
			</enum>
			<enum name="NxtButtons">
				<value name="Left"/>
				<value name="Right"/>
				<value name="Enter"/>
				<value name="Escape"/>
			</enum>
			<enum name="Ev3Buttons">
				<value name="Back"/>
				<value name="Down"/>
				<value name="Enter"/>
				<value name="Left"/>
				<value name="Right"/>
				<value name="Up"/>
			</enum>
			<groups>
				<group name="RobotsDiagramGroup" rootNode="diagram">
					<groupNode type="RobotsDiagramNode" name="diagram" xPosition="0" yPosition="0"/>
					<groupNode type="InitialNode" name="initialNode" xPosition="50" yPosition="300" parent="diagram"/>
				</group>
				<group name="SubprogramDiagramGroup" rootNode="diagram">
					<groupNode type="SubprogramDiagram" name="diagram" xPosition="0" yPosition="0"/>
					<groupNode type="InitialNode" name="initialNode" xPosition="50" yPosition="300" parent="diagram"/>
				</group>
			</groups>
		</nonGraphicTypes>
		<graphicTypes>
			<!-- Algorithms -->
			<node displayedName="Robot`s Behaviour Diagram"  name="RobotsDiagramNode">
				<graphics>
					<picture sizex="204" sizey="204">
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="2" stroke-width="0" x1="22" y2="2" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="202" stroke-width="0" x1="22" y2="202" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="2" y2="182" fill-style="none" x2="2"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="202" y2="182" fill-style="none" x2="202"/>
						<arc spanAngle="1440" startAngle="1440" y1="2" x1="2" y2="42" x2="42"/>
						<arc spanAngle="1440" startAngle="0" y1="2" x1="162" y2="42" x2="202"/>
						<arc spanAngle="1440" startAngle="2880" y1="162" x1="2" y2="202" x2="42"/>
						<arc spanAngle="-1440" startAngle="0" y1="162" x1="162" y2="202" x2="202"/>
					</picture>
					<labels>
						<label x="42" y="12" textBinded="name"/>
					</labels>
					<ports>
						<pointPort x="2" y="102"/>
						<pointPort x="102" y="2"/>
						<pointPort x="202" y="102"/>
						<pointPort x="102" y="202"/>
					</ports>
				</graphics>
				<logic>
					<container>
						<contains type="AbstractNode"/>
					</container>
					<properties>
						<property displayedName="World model" type="string" name="worldModel" />
						<property displayedName="Devices configuration" type="string" name="devicesConfiguration" />
					</properties>
				</logic>
			</node>
			<node name="AbstractNode" abstract="true">
				<graphics>
					<picture sizex="50" sizey="50">
					</picture>
					<ports>
						<linePort>
							<start startx="0" starty="5"/>
							<end endx="0" endy="45"/>
						</linePort>
						<linePort>
							<start startx="5" starty="0"/>
							<end endx="45" endy="0"/>
						</linePort>
						<linePort>
							<start startx="50" starty="5"/>
							<end endx="50" endy="45"/>
						</linePort>
						<linePort>
							<start startx="5" starty="50"/>
							<end endx="45" endy="50"/>
						</linePort>
					</ports>
				</graphics>
				<logic>
					<container/>
				</logic>
			</node>
			<node displayedName="Subprogram Diagram" name="SubprogramDiagram">
				<graphics>
					<picture sizex="204" sizey="204">
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="2" stroke-width="0" x1="22" y2="2" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="202" stroke-width="0" x1="22" y2="202" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="2" y2="182" fill-style="none" x2="2"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="202" y2="182" fill-style="none" x2="202"/>
						<arc spanAngle="1440" startAngle="1440" y1="2" x1="2" y2="42" x2="42"/>
						<arc spanAngle="1440" startAngle="0" y1="2" x1="162" y2="42" x2="202"/>
						<arc spanAngle="1440" startAngle="2880" y1="162" x1="2" y2="202" x2="42"/>
						<arc spanAngle="-1440" startAngle="0" y1="162" x1="162" y2="202" x2="202"/>
					</picture>
					<labels>
						<label x="42" y="12" textBinded="name"/>
					</labels>
					<ports>
						<pointPort x="2" y="102"/>
						<pointPort x="102" y="2"/>
						<pointPort x="202" y="102"/>
						<pointPort x="102" y="202"/>
					</ports>
				</graphics>
				<logic>
					<container>
						<contains type="AbstractNode"/>
					</container>
				</logic>
			</node>
			<node displayedName="Final Node" name="FinalNode" path="13, 200 : 198, 15 :  | 12, 12 : 198, 198 : " description="The final node of the program. If the program consists of some parallel execution lines the reachment of this block terminates the corresponding execution line. This block can`t have outgoing links.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/finalBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Comment" name="CommentBlock" description="This block can hold text notes that are ignored by generators and interpreters. Use it for improving the diagram readability.">
				<graphics>
					<picture sizex="200" sizey="100">
						<line y1="0" y2="100" fill="#ffffff" stroke="#000000" x1="0" x2="0" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="100" y2="100" fill="#ffffff" stroke="#000000" x1="0" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="20" y2="100" fill="#ffffff" stroke="#000000" x1="200" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="0" y2="20" fill="#ffffff" stroke="#000000" x1="180" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="0" y2="0" fill="#ffffff" stroke="#000000" x1="0" x2="178" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="0" y2="20" fill="#ffffff" stroke="#000000" x1="180" x2="180" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="20" y2="20" fill="#ffffff" stroke="#000000" x1="180" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
					</picture>
					<labels>
						<label x="20" y="20" textBinded="Comment" hard="true" background="white"/>
					</labels>
					<ports>
						<linePort>
							<start startx="0" starty="5"/>
							<end endx="0" endy="95"/>
						</linePort>
						<linePort>
							<start startx="5" starty="0"/>
							<end endx="175" endy="0"/>
						</linePort>
						<linePort>
							<start startx="200" starty="25"/>
							<end endx="200" endy="95"/>
						</linePort>
						<linePort>
							<start startx="5" starty="100"/>
							<end endx="195" endy="100"/>
						</linePort>
						<linePort>
							<start startx="180" starty="0"/>
							<end endx="200" endy="20"/>
						</linePort>
					</ports>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Comment" type="string" name="Comment">
							<default>\"Enter some text here...\"</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Subprogram" name="Subprogram" description="Subprogram call. Subprograms are used for splitting repetitive program parts into a separate diagram and then calling it from main diagram or other subprograms. When this block is added into a diagram it will be suggested to enter subprogram name. The double click on subprogram call block may open the corresponding subprogram diagram. Moreover user palette will appear containing existing subrpograms, they can be dragged into a diagram like the usual blocks.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/subprogramRobotsBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-20" y="-30" textBinded="name" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
					<explodesTo>
						<target type="SubprogramDiagramGroup" makeReusable="true" requireImmediateLinkage="true"/>
					</explodesTo>
				</logic>
			</node>
			<node displayedName="Variable Initialization" name="VariableInit" description="Assigns a given value to a given variable.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/variableInitBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="33" y="60" textBinded="variable" background="white"/>
						<label x="-60" y="60" text="Variable:"/>
						<label x="33" y="80" textBinded="value" background="white"/>
						<label x="-65" y="80" text="Value:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Variable" type="string" name="variable">
							<default>x</default>
						</property>
						<property displayedName="Value" type="string" name="value">
							<default>0</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
					<container/>
				</logic>
			</node>
			<node displayedName="Initial Node" name="InitialNode" path="210, 111 : 209, 120 : 208, 130 : 205, 139 : 202, 148 : 198, 157 : 193, 166 : 187, 173 : 181, 181 : 173, 187 : 166, 193 : 157, 198 : 148, 202 : 139, 205 : 130, 208 : 120, 209 : 111, 209 : 102, 209 : 92, 208 : 83, 205 : 74, 202 : 65, 198 : 56, 193 : 49, 187 : 41, 181 : 35, 173 : 29, 166 : 24, 157 : 20, 148 : 17, 139 : 14, 130 : 13, 120 : 13, 111 : 13, 102 : 14, 92 : 17, 83 : 20, 74 : 24, 65 : 29, 56 : 35, 49 : 41, 41 : 49, 35 : 56, 29 : 65, 24 : 74, 20 : 83, 17 : 92, 14 : 102, 13 : 111, 13 : 120, 13 : 130, 14 : 139, 17 : 148, 20 : 157, 24 : 166, 29 : 173, 35 : 181, 41 : 187, 49 : 193, 56 : 198, 65 : 202, 74 : 205, 83 : 208, 92 : 209, 102 : 210, 111 : " description="The entry point of the program execution. Each diagram should have only one such block, it must not have incomming links and it must have only one outgoing link. The interpretation process starts from exactly this block.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/initialBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<edge displayedName="Link" name="ControlFlow" description="For creating a link between two elements A and B you can just hover a mouse above A, press the right mouse button and (without releasing it) draw a line to the element B. Alternatively you can just 'pull' a link from a small blue circle next to the element.">
				<graphics>
					<lineType type="solidLine"/>
					<shape type="broken"/>
					<labels>
						<label textBinded="Guard" hard="true"/>
					</labels>
				</graphics>
				<logic>
					<associations endType="open_arrow" beginType="no_arrow">
						<association beginName="begin" endName="end"/>
					</associations>
					<possibleEdges>
						<possibleEdge beginName="NonTyped" directed="false" endName="NonTyped"/>
					</possibleEdges>
					<properties>
						<property displayedName="Guard" type="GuardType" name="Guard"/>
					</properties>
					<dividability isDividable="true"/>
				</logic>
			</edge>
			<node displayedName="Loop" name="Loop" path="154, 251 : 205, 302 :  | 154, 251 : 209, 196 :  | 100, 12 : 154, 66 :  | 154, 66 : 103, 117 :  | 12, 66 : 297, 66 : 297, 251 : 12, 251 : 12, 66 : " description="This block executes a sequence of blocks for a given number of times. The number of repetitions is specified by the 'Iterations' parameter. This block must have two outgoing links. One of them must be marked with the 'iteration' guard (that means that the property 'Guard' of the link must be set to 'iteration' value). Another outgoing link must be unmarked: the program execution will be proceeded through this link when it will go through our 'Loop' block for the given number of times.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/loopBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Iterations" hard="true" background="white"/>
						<label x="-30" y="-30" text="Iterations:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Iterations" type="string" name="Iterations">
							<default>10</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Fork" name="Fork" path="13, 86 : 231, 86 :  | 12, 12 : 231, 12 : " description="Separates program execution into a number of threads that will be executed concurrently from the programmers`s point of view. For example in such way signal from sensor and some time interval can be waited synchroniously. This block must have at least two outgoing links.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/forkBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Function" name="Function" path="58, 12 : 58, 172 :  | 58, 12 : 148, 12 :  | 12, 96 : 108, 96 : " description="Evaluates a value of the given expression. Also new variables can be defined in this block. See the 'Expressions Syntax' chapter in help for more information about 'Function' block syntax.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/functionBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-37" y="60" text="Body:"/>
						<label x="30" y="60" textBinded="Body" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Body" type="string" name="Body"/>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Condition" name="IfBlock" path="96, 182 : 180, 94 :  | 98, 12 : 180, 94 :  | 12, 98 : 96, 182 :  | 98, 12 : 12, 98 : " description="Separates program execution in correspondece with the given condition. The 'Condition' parameter value must be some boolean expression that will determine subsequent program execution line. This block must have two outgoing links, at least one of them must have 'Guard' parameter set to 'true' or 'false'. The execution will be proceed trough the link marked with the guard corresponding to 'Condition' parameter of the block.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/ifBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="60" textBinded="Condition" background="white"/>
						<label x="-25" y="60" text="Condition:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Condition" type="string" name="Condition">
							<default>0</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Switch" name="SwitchBlock" description="Selects the program execution branch in correspondence with some expression value. The value of the expression written in 'Expression' property is compared to the values on the outgoing links. If equal value is found then execution will be proceeded by that branch. Else branch without a marker will be selected.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/switchBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="Expression" background="white"/>
						<label x="-25" y="60" text="Expression:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Expression" type="string" name="Expression">
							<default>0</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!--- Engine movement commands -->
			<node name="EngineCommand">
				<logic>
					<container/>
					<properties>
						<property displayedName="Ports" type="string" name="Ports" />
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node name="EngineMovementCommand">
				<logic>
					<container/>
					<properties>
						<property displayedName="Power (%)" type="string" name="Power">
							<default>100</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="EngineCommand"/>
					</generalizations>
				</logic>
			</node>
			<node name="NxtEngineMovementCommand">
				<logic>
					<container/>
					<properties>
						<property displayedName="Mode" type="BreakEngineMode" name="Mode">
							<default>break</default>
						</property>
						<property displayedName="Ports" type="string" name="Ports" >
							<default>B, C</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="EngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Motors Backward" name="NxtEnginesBackward" path="111, 224 : 0, 113 :  | 113, 0 : 0, 113 :  | 0, 113 : 287, 113 : " description="Enables motors on the given ports in reverse mode with the given power. Ports are specified with A, B or C letters divided by commas. The power is specified in percents with the number from -100 to 100, if negative number is specified then the motor is enabled in the usual mode.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesBackwardBlock.png" x1="0" y2="50" x2="50"/>
						<rectangle fill="#7cfc00" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#000000" x2="10" stroke-style="none">
							<showIf value="float" property="Mode" sign="="/>
						</rectangle>
						<rectangle fill="#ff0000" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#ffa500" x2="10" stroke-style="none">
							<showIf value="break" property="Mode" sign="="/>
						</rectangle>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-8" y="-30" text="Ports:" hard="true"/>
						<label x="40" y="60" textBinded="Power" background="white"/>
						<label x="-50" y="60" text="Power (%):"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="NxtEngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Motors Forward" name="NxtEnginesForward" path="185, 207 : 287, 105 :  | 287, 105 : 182, 0 :  | 0, 105 : 287, 105 : " description="Enables motors on the given ports with the given power. Ports are specified with A, B or C letters divided by commas. The power is specified in percents with the number from -100 to 100, if negative number is specified then the motor is enabled in the reverse mode.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesForwardBlock.png" x1="0" y2="50" x2="50"/>
						<rectangle fill="#7cfc00" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#000000" x2="10" stroke-style="none">
							<showIf value="float" property="Mode" sign="="/>
						</rectangle>
						<rectangle fill="#ff0000" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#ffa500" x2="10" stroke-style="none">
							<showIf value="break" property="Mode" sign="="/>
						</rectangle>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-8" y="-30" text="Ports:" hard="true"/>
						<label x="40" y="60" textBinded="Power" background="white"/>
						<label x="-50" y="60" text="Power (%):"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="NxtEngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node name="Ev3EngineMovementCommand">
				<logic>
					<container/>
					<properties>
						<property displayedName="Mode" type="BreakEngineMode" name="Mode">
							<default>break</default>
						</property>
						<property displayedName="Ports" type="string" name="Ports" >
							<default>B, C</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="EngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Motors Backward" name="Ev3EnginesBackward" path="111, 224 : 0, 113 :  | 113, 0 : 0, 113 :  | 0, 113 : 287, 113 : " description="Enables motors on the given ports in reverse mode with the given power. Ports are specified with A, B or C letters divided by commas. The power is specified in percents with the number from -100 to 100, if negative number is specified then the motor is enabled in the usual mode.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesBackwardBlock.png" x1="0" y2="50" x2="50"/>
						<rectangle fill="#7cfc00" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#000000" x2="10" stroke-style="none">
							<showIf value="float" property="Mode" sign="="/>
						</rectangle>
						<rectangle fill="#ff0000" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#ffa500" x2="10" stroke-style="none">
							<showIf value="break" property="Mode" sign="="/>
						</rectangle>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-8" y="-30" text="Ports:" hard="true"/>
						<label x="40" y="60" textBinded="Power" background="white"/>
						<label x="-50" y="60" text="Power (%):"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="Ev3EngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Motors Forward" name="Ev3EnginesForward" path="185, 207 : 287, 105 :  | 287, 105 : 182, 0 :  | 0, 105 : 287, 105 : " description="Enables motors on the given ports with the given power. Ports are specified with A, B or C letters divided by commas. The power is specified in percents with the number from -100 to 100, if negative number is specified then the motor is enabled in the reverse mode.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesForwardBlock.png" x1="0" y2="50" x2="50"/>
						<rectangle fill="#7cfc00" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#000000" x2="10" stroke-style="none">
							<showIf value="float" property="Mode" sign="="/>
						</rectangle>
						<rectangle fill="#ff0000" stroke-width="1" fill-style="solid" y1="0" y2="10" x1="0" stroke="#ffa500" x2="10" stroke-style="none">
							<showIf value="break" property="Mode" sign="="/>
						</rectangle>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-8" y="-30" text="Ports:" hard="true"/>
						<label x="40" y="60" textBinded="Power" background="white"/>
						<label x="-50" y="60" text="Power (%):"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="Ev3EngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node name="TrikV6EngineMovementCommand">
				<logic>
					<container/>
					<properties>
						<property displayedName="Ports" type="string" name="Ports" >
							<default>M3, M4</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="EngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Motors Backward" name="TrikV6EnginesBackward" path="111, 224 : 0, 113 :  | 113, 0 : 0, 113 :  | 0, 113 : 287, 113 : " description="Enables motors on the given ports in reverse mode with the given power. Ports are specified in accordance with TRIK controller notations (for example M1, E2) and divided by commas. The power is specified in percents with the number from -100 to 100, if negative number is specified then the motor is enabled in the usual mode.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesBackwardBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-8" y="-30" text="Ports:" hard="true"/>
						<label x="40" y="60" textBinded="Power" background="white"/>
						<label x="-50" y="60" text="Power (%):"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="TrikV6EngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Motors Forward" name="TrikV6EnginesForward" path="185, 207 : 287, 105 :  | 287, 105 : 182, 0 :  | 0, 105 : 287, 105 : " description="Enables motors on the given ports with the given power. Ports are specified in accordance with TRIK controller notations (for example M1, E2) and divided by commas. The power is specified in percents with the number from -100 to 100, if negative number is specified then the motor is enabled in the reverse mode.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesForwardBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-8" y="-30" text="Ports:" hard="true"/>
						<label x="40" y="60" textBinded="Power" background="white"/>
						<label x="-50" y="60" text="Power (%):"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="TrikV6EngineMovementCommand"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Angular Servo" name="TrikAngularServo" description="Manages angular servomotor. Sets up rotation angle on the given port in degrees. Values from 0 to 90 are correspond to a clockwise rotation and values from -90 to 0 correspond to counterclockwise rotation.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/angularServoBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-8" y="-30" text="Ports:" hard="true"/>
						<label x="65" y="60" textBinded="Power" background="white"/>
						<label x="-50" y="60" text="Angle (degrees):"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="EngineCommand"/>
					</generalizations>
					<properties>
						<property displayedName="Ports" type="string" name="Ports">
							<default>E1</default>
						</property>
						<property displayedName="Angle (degrees)" type="string" name="Power">
							<default>0</default>
						</property>
					</properties>
				</logic>
			</node>
			<node displayedName="Stop Motors" name="NxtEnginesStop" path="49, 117 : 185, 117 :  | 223, 118 : 222, 128 : 221, 138 : 218, 148 : 215, 158 : 211, 167 : 205, 176 : 199, 184 : 192, 192 : 184, 199 : 176, 205 : 167, 211 : 158, 215 : 148, 218 : 138, 221 : 128, 222 : 118, 223 : 108, 222 : 98, 221 : 88, 218 : 78, 215 : 69, 211 : 60, 205 : 52, 199 : 44, 192 : 37, 184 : 31, 176 : 25, 167 : 21, 158 : 18, 148 : 15, 138 : 14, 128 : 13, 118 : 14, 108 : 15, 98 : 18, 88 : 21, 78 : 25, 69 : 31, 60 : 37, 52 : 44, 44 : 52, 37 : 60, 31 : 69, 25 : 78, 21 : 88, 18 : 98, 15 : 108, 14 : 118, 13 : 128, 14 : 138, 15 : 148, 18 : 158, 21 : 167, 25 : 176, 31 : 184, 37 : 192, 44 : 199, 52 : 205, 60 : 211, 69 : 215, 78 : 218, 88 : 221, 98 : 222, 108 : 223, 118 : " description="Disables motors on the given ports.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesStopBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-10" y="-30" text="Ports:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="EngineCommand"/>
					</generalizations>
					<properties>
						<property displayedName="Ports" type="string" name="Ports">
							<default>A, B, C</default>
						</property>
					</properties>
				</logic>
			</node>
			<node displayedName="Stop Motors" name="Ev3EnginesStop" path="49, 117 : 185, 117 :  | 223, 118 : 222, 128 : 221, 138 : 218, 148 : 215, 158 : 211, 167 : 205, 176 : 199, 184 : 192, 192 : 184, 199 : 176, 205 : 167, 211 : 158, 215 : 148, 218 : 138, 221 : 128, 222 : 118, 223 : 108, 222 : 98, 221 : 88, 218 : 78, 215 : 69, 211 : 60, 205 : 52, 199 : 44, 192 : 37, 184 : 31, 176 : 25, 167 : 21, 158 : 18, 148 : 15, 138 : 14, 128 : 13, 118 : 14, 108 : 15, 98 : 18, 88 : 21, 78 : 25, 69 : 31, 60 : 37, 52 : 44, 44 : 52, 37 : 60, 31 : 69, 25 : 78, 21 : 88, 18 : 98, 15 : 108, 14 : 118, 13 : 128, 14 : 138, 15 : 148, 18 : 158, 21 : 167, 25 : 176, 31 : 184, 37 : 192, 44 : 199, 52 : 205, 60 : 211, 69 : 215, 78 : 218, 88 : 221, 98 : 222, 108 : 223, 118 : " description="Disables motors on the given ports.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesStopBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-10" y="-30" text="Ports:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="EngineCommand"/>
					</generalizations>
					<properties>
						<property displayedName="Ports" type="string" name="Ports">
							<default>A, B, C, D</default>
						</property>
					</properties>
				</logic>
			</node>
			<node displayedName="Stop Motors" name="TrikV6EnginesStop" path="49, 117 : 185, 117 :  | 223, 118 : 222, 128 : 221, 138 : 218, 148 : 215, 158 : 211, 167 : 205, 176 : 199, 184 : 192, 192 : 184, 199 : 176, 205 : 167, 211 : 158, 215 : 148, 218 : 138, 221 : 128, 222 : 118, 223 : 108, 222 : 98, 221 : 88, 218 : 78, 215 : 69, 211 : 60, 205 : 52, 199 : 44, 192 : 37, 184 : 31, 176 : 25, 167 : 21, 158 : 18, 148 : 15, 138 : 14, 128 : 13, 118 : 14, 108 : 15, 98 : 18, 88 : 21, 78 : 25, 69 : 31, 60 : 37, 52 : 44, 44 : 52, 37 : 60, 31 : 69, 25 : 78, 21 : 88, 18 : 98, 15 : 108, 14 : 118, 13 : 128, 14 : 138, 15 : 148, 18 : 158, 21 : 167, 25 : 176, 31 : 184, 37 : 192, 44 : 199, 52 : 205, 60 : 211, 69 : 215, 78 : 218, 88 : 221, 98 : 222, 108 : 223, 118 : " description="Disables motors on the given ports.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/enginesStopBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-10" y="-30" text="Ports:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="EngineCommand"/>
					</generalizations>
					<properties>
						<property displayedName="Ports" type="string" name="Ports">
							<default>M1, M2, M3, M4</default>
						</property>
					</properties>
				</logic>
			</node>

			<!-- Other action blocks -->
			<node displayedName="Beep" name="NxtBeep" path="152, 12 : 281, 12 :  | 152, 183 : 152, 12 :  | 155, 170 : 154, 176 : 153, 183 : 151, 190 : 149, 196 : 146, 202 : 143, 208 : 139, 214 : 134, 219 : 129, 224 : 123, 228 : 117, 231 : 111, 234 : 105, 236 : 98, 238 : 91, 239 : 85, 239 : 79, 239 : 72, 238 : 65, 236 : 59, 234 : 53, 231 : 47, 228 : 41, 224 : 36, 219 : 31, 214 : 27, 208 : 24, 202 : 21, 196 : 19, 190 : 17, 183 : 16, 176 : 16, 170 : 16, 164 : 17, 157 : 19, 150 : 21, 144 : 24, 138 : 27, 132 : 31, 126 : 36, 121 : 41, 116 : 47, 112 : 53, 109 : 59, 106 : 65, 104 : 72, 102 : 79, 101 : 85, 101 : 91, 101 : 98, 102 : 105, 104 : 111, 106 : 117, 109 : 123, 112 : 129, 116 : 134, 121 : 139, 126 : 143, 132 : 146, 138 : 149, 144 : 151, 150 : 153, 157 : 154, 164 : 155, 170 : " description="Plays on the robot a sound with the fixed frequency. There are two parameters. The first one is a loudness of the sound, the second means if program should wait for sound completion or go to next block right away.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/beepBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-35" y="-30" text="Volume (%):" hard="true"/>
						<label x="-60" y="60" text="Wait for Completion:"/>
						<label x="60" y="-30" textBinded="Volume" hard="true" background="white"/>
						<label x="70" y="60" textBinded="WaitForCompletion" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Wait for Completion" type="bool" name="WaitForCompletion">
							<default>true</default>
						</property>
						<property displayedName="Volume" type="string" name="Volume">
							<default>50</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Play Tone" name="NxtPlayTone" path="130, 62 : 130, 146 :  | 106, 0 : 106, 212 :  | 0, 106 : 106, 212 :  | 0, 106 : 106, 0 : " description="Plays on the robot a sound with the given frequency and duration. This block is similar to the 'Beep' block wuth the only difference that here you can specify sound parameters.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/playToneBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-35" y="-30" text="Frequency (Hz):" hard="true"/>
						<label x="-35" y="60" text="Volume (%):"/>
						<label x="-68" y="80" text="Duration (ms):"/>
						<label x="-68" y="100" text="Wait for Completion:"/>
						<label x="50" y="-30" textBinded="Frequency" hard="true" background="white"/>
						<label x="60" y="60" textBinded="Volume" background="white"/>
						<label x="60" y="80" textBinded="Duration" background="white"/>
						<label x="60" y="100" textBinded="WaitForCompletion" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Frequency" type="string" name="Frequency">
							<default>1000</default>
						</property>
						<property displayedName="Volume" type="string" name="Volume">
							<default>50</default>
						</property>
						<property displayedName="Duration" type="string" name="Duration">
							<default>1000</default>
						</property>
						<property displayedName="Wait for Completion" type="bool" name="WaitForCompletion">
							<default>true</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Beep" name="Ev3Beep" path="152, 12 : 281, 12 :  | 152, 183 : 152, 12 :  | 155, 170 : 154, 176 : 153, 183 : 151, 190 : 149, 196 : 146, 202 : 143, 208 : 139, 214 : 134, 219 : 129, 224 : 123, 228 : 117, 231 : 111, 234 : 105, 236 : 98, 238 : 91, 239 : 85, 239 : 79, 239 : 72, 238 : 65, 236 : 59, 234 : 53, 231 : 47, 228 : 41, 224 : 36, 219 : 31, 214 : 27, 208 : 24, 202 : 21, 196 : 19, 190 : 17, 183 : 16, 176 : 16, 170 : 16, 164 : 17, 157 : 19, 150 : 21, 144 : 24, 138 : 27, 132 : 31, 126 : 36, 121 : 41, 116 : 47, 112 : 53, 109 : 59, 106 : 65, 104 : 72, 102 : 79, 101 : 85, 101 : 91, 101 : 98, 102 : 105, 104 : 111, 106 : 117, 109 : 123, 112 : 129, 116 : 134, 121 : 139, 126 : 143, 132 : 146, 138 : 149, 144 : 151, 150 : 153, 157 : 154, 164 : 155, 170 : " description="Plays on the robot a sound with the fixed frequency. There are two parameters. The first one is a loudness of the sound, the second means if program should wait for sound completion or go to next block right away.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/beepBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-60" y="60" text="Wait for Completion:"/>
						<label x="70" y="60" textBinded="WaitForCompletion" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Wait for Completion" type="bool" name="WaitForCompletion">
							<default>true</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Play Tone" name="Ev3PlayTone" path="130, 62 : 130, 146 :  | 106, 0 : 106, 212 :  | 0, 106 : 106, 212 :  | 0, 106 : 106, 0 : " description="Plays on the robot a sound with the given frequency and duration. This block is similar to the 'Beep' block wuth the only difference that here you can specify sound parameters.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/playToneBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-35" y="-30" text="Frequency (Hz):" hard="true"/>
						<label x="-35" y="60" text="Volume (%):"/>
						<label x="-68" y="80" text="Duration (ms):"/>
						<label x="-68" y="100" text="Wait for Completion:"/>
						<label x="50" y="-30" textBinded="Frequency" hard="true" background="white"/>
						<label x="60" y="60" textBinded="Volume" background="white"/>
						<label x="60" y="80" textBinded="Duration" background="white"/>
						<label x="60" y="100" textBinded="WaitForCompletion" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Frequency" type="string" name="Frequency">
							<default>1000</default>
						</property>
						<property displayedName="Volume" type="string" name="Volume">
							<default>50</default>
						</property>
						<property displayedName="Duration" type="string" name="Duration">
							<default>1000</default>
						</property>
						<property displayedName="Wait for Completion" type="bool" name="WaitForCompletion">
							<default>true</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Play Tone" name="TrikPlayTone" path="130, 62 : 130, 146 :  | 106, 0 : 106, 212 :  | 0, 106 : 106, 212 :  | 0, 106 : 106, 0 : " description="Plays on the robot a sound file (.wav or .mp3) previously uploaded to it.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/playToneBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-35" y="-30" text="File name:" />
						<label x="50" y="-30" textBinded="FileName" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="File Name" type="string" name="FileName">
							<default>media/beep.wav</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Clear Encoder" name="NxtClearEncoder" path="112, 176 : 78, 142 :  | 112, 176 : 148, 140 :  | 112, 33 : 112, 176 :  | 12, 12 : 210, 12 : 210, 210 : 12, 210 : 12, 12 : " description="Nullifies tacho limit of the motors on the given ports.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/nullificationEncoderBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-10" y="-30" text="Ports:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Ports" type="string" name="Ports">
							<default>A, B, C</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Clear Encoder" name="TrikV6ClearEncoder" path="112, 176 : 78, 142 :  | 112, 176 : 148, 140 :  | 112, 33 : 112, 176 :  | 12, 12 : 210, 12 : 210, 210 : 12, 210 : 12, 12 : " description="Nullifies tacho limit of the motors on the given ports.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/nullificationEncoderBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Ports" hard="true" background="white"/>
						<label x="-10" y="-30" text="Ports:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Ports" type="string" name="Ports">
							<default>B1, B2, B3, B4</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="System Call" name="TrikSystem" description="Invokes bash script-style command on the robot.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/systemBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Command:" hard="true"/>
						<label x="55" y="-30" textBinded="Command" hard="true" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Command" type="string" name="Command" />
						<property displayedName="Code" type="bool" name="Code">
							<default>false</default>
						</property>
					</properties>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Initialize Videocamera" name="TrikInitCamera" description="Enables line or object or color detector by videocamera and draws videostream on the robot`s screen.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/initCameraBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Mode" hard="true" background="white"/>
						<label x="65" y="-30" textBinded="Mode" hard="true" background="white"/>
						<label x="-15" y="60" text="Initialize Videocamera" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Mode" type="VideoSensor" name="Mode">
							<default>line</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Detect by Videocamera" name="TrikDetect" description="Initializes videocamera line or object detector with the color of the object in the middle of the camera`s sight.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/detectBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Mode" hard="true" background="white"/>
						<label x="65" y="-30" textBinded="Mode" hard="true" background="white"/>
						<label x="-15" y="60" text="Detect by Videocamera" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Mode" type="DetectableVideoSensor" name="Mode">
							<default>line</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Line Detector into Variable" name="TrikDetectorToVariable" description="Stores videocamera line detector`s value into a given variable.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/lineDetectorIntoVariableBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="60" text="Line Detector into Variable" background="white"/>
						<label x="-15" y="80" text="Variable:"/>
						<label x="85" y="80" textBinded="Variable" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Variable" type="string" name="Variable" />
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Led" name="TrikLed" path="70, 79 : 70, 121 :  | 25, 78 : 25, 122 :  | 12, 12 : 86, 12 : 86, 78 : 12, 78 : 12, 12 : " description="Sets the color of the led on the robot`s front panel.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/ledBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Color:" hard="true"/>
						<label x="35" y="-30" textBinded="Color" hard="true" background="white"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Color" type="LedColor" name="Color">
							<default>red</default>
						</property>
					</properties>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!-- Waiting for sensors blocks, EV3 -->
			<node name="Ev3SensorBlock">
				<logic>
					<container/>
					<properties>
						<property displayedName="Port" type="Ev3SensorPort" name="Port">
							<default>1</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Touch Sensor" name="Ev3WaitForTouchSensor" path="12, 123 : 174, 123 :  | 174, 12 : 358, 12 : 358, 234 : 174, 234 : 174, 12 : " description="Waits till the touch sensor is pressed. The only parameter is a sensor`s port number (1, 2, 3 or 4).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForTouchSensorBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true" background="white"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="Ev3SensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Color" name="Ev3WaitForColor" path="196, 12 : 196, 154 :  | 12, 12 : 380, 12 : 380, 154 : 12, 154 : 12, 12 : " description="Waits till the color sensor on the given port will recognize the given color.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForColorBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="37" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="37" y="60" textBinded="Color"/>
						<label x="0" y="60" text="Color:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Color" type="Color" name="Color">
							<default>red</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="Ev3SensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Light" name="Ev3WaitForLight" path="249, 220 : 349, 220 :  | 130, 12 : 130, 102 :  | 249, 221 : 248, 232 : 247, 244 : 244, 255 : 240, 266 : 235, 276 : 229, 286 : 222, 296 : 214, 304 : 206, 312 : 196, 319 : 186, 325 : 176, 330 : 165, 334 : 154, 337 : 142, 338 : 131, 339 : 120, 338 : 108, 337 : 97, 334 : 86, 330 : 76, 325 : 66, 319 : 56, 312 : 48, 304 : 40, 296 : 33, 286 : 27, 276 : 22, 266 : 18, 255 : 15, 244 : 14, 232 : 13, 221 : 14, 210 : 15, 198 : 18, 187 : 22, 176 : 27, 166 : 33, 156 : 40, 146 : 48, 138 : 56, 130 : 66, 123 : 76, 117 : 86, 112 : 97, 108 : 108, 105 : 120, 104 : 131, 103 : 142, 104 : 154, 105 : 165, 108 : 176, 112 : 186, 117 : 196, 123 : 206, 130 : 214, 138 : 222, 146 : 229, 156 : 235, 166 : 240, 176 : 244, 187 : 247, 198 : 248, 210 : 249, 221 : " description="Waits till the value returned by the light sensor on the given port will be greater or less than the given in the 'Percents' parameter value (0 to 100).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForLightBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="45" y="60" textBinded="Percents"/>
						<label x="-26" y="60" text="Percents:"/>
						<label x="50" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Percents" type="string" name="Percents">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="Ev3SensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Range Sensor" name="Ev3WaitForRangeSensor" path="190, 162 : 219, 122 :  | 219, 122 : 190, 86 :  | 120, 122 : 219, 122 :  | 12, 118 : 118, 12 :  | 12, 118 : 118, 224 :  | 118, 12 : 118, 224 : " description="Waits till the value returned by the ultrasonic or infrared range sensor on the given port will be greater or less than the given in the 'Distance' parameter value (the distance is specified in centimeters, 0 to 255).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForSonarDistanceBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true" background="white"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="50" y="60" textBinded="Distance" background="white"/>
						<label x="-60" y="60" text="Distance (cm):"/>
						<label x="55" y="80" textBinded="Sign" background="white"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Distance" type="string" name="Distance">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="Ev3SensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for button" name="Ev3WaitForButton" description="Waits for press of a button on a brick.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForButtonsBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="60" textBinded="Button"/>
						<label x="-20" y="60" text="Button:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
				<container/>
				<properties>
					<property displayedName="Button" type="Ev3Buttons" name="Button">
						<default>Up</default>
					</property>
				</properties>
				<generalizations>
					<parent parentName="AbstractNode"/>
				</generalizations>
				</logic>
			</node>

			<!-- Waiting for sensors blocks, NXT -->
			<node name="NxtSensorBlock">
				<logic>
					<container/>
					<properties>
						<property displayedName="Port" type="NxtSensorPort" name="Port">
							<default>1</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Touch Sensor" name="NxtWaitForTouchSensor" path="12, 123 : 174, 123 :  | 174, 12 : 358, 12 : 358, 234 : 174, 234 : 174, 12 : " description="Waits till the touch sensor is pressed. The only parameter is a sensor`s port number (1, 2, 3 or 4).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForTouchSensorBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true" background="white"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="NxtSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Sound Sensor" name="NxtWaitForSound" path="12, 178 : 117, 178 :  | 117, 96 : 117, 178 :  | 13, 96 : 117, 96 :  | 13, 12 : 13, 96 :  | 13, 12 : 118, 12 : " description="Waits till the loudness obtained by the sound sensor on the given port will be greater or less than the given value.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForSoundSensorBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true" background="white"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="45" y="60" textBinded="Volume" background="white"/>
						<label x="-30" y="60" text="Volume:"/>
						<label x="50" y="80" textBinded="Sign" background="white"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Volume" type="string" name="Volume">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="NxtSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Sonar Distance" name="NxtWaitForSonarDistance" path="190, 162 : 219, 122 :  | 219, 122 : 190, 86 :  | 120, 122 : 219, 122 :  | 12, 118 : 118, 12 :  | 12, 118 : 118, 224 :  | 118, 12 : 118, 224 : " description="Waits till the value returned by the ultrasonic sensor on the given port will be greater or less than the given in the 'Distance' parameter value (the distance is specified in centimeters, 0 to 255).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForSonarDistanceBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true" background="white"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="50" y="60" textBinded="Distance" background="white"/>
						<label x="-60" y="60" text="Distance (cm):"/>
						<label x="55" y="80" textBinded="Sign" background="white"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Distance" type="string" name="Distance">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="NxtSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Color Intensity" name="NxtWaitForColorIntensity" path="201, 137 : 200, 143 : 199, 149 : 198, 154 : 196, 160 : 193, 166 : 190, 171 : 186, 176 : 182, 180 : 178, 184 : 173, 188 : 168, 191 : 162, 194 : 156, 196 : 151, 197 : 145, 198 : 139, 198 : 133, 198 : 127, 197 : 122, 196 : 116, 194 : 110, 191 : 105, 188 : 100, 184 : 96, 180 : 92, 176 : 88, 171 : 85, 166 : 82, 160 : 80, 154 : 79, 149 : 78, 143 : 78, 137 : 78, 131 : 79, 125 : 80, 120 : 82, 114 : 85, 108 : 88, 103 : 92, 98 : 96, 94 : 100, 90 : 105, 86 : 110, 83 : 116, 80 : 122, 78 : 127, 77 : 133, 76 : 139, 76 : 145, 76 : 151, 77 : 156, 78 : 162, 80 : 168, 83 : 173, 86 : 178, 90 : 182, 94 : 186, 98 : 190, 103 : 193, 108 : 196, 114 : 198, 120 : 199, 125 : 200, 131 : 201, 137 :  | 260, 136 : 259, 148 : 257, 160 : 254, 171 : 250, 183 : 245, 194 : 239, 204 : 231, 214 : 223, 223 : 214, 231 : 204, 239 : 194, 245 : 183, 250 : 171, 254 : 160, 257 : 148, 259 : 136, 259 : 124, 259 : 112, 257 : 101, 254 : 89, 250 : 78, 245 : 68, 239 : 58, 231 : 49, 223 : 41, 214 : 33, 204 : 27, 194 : 22, 183 : 18, 171 : 15, 160 : 13, 148 : 13, 136 : 13, 124 : 15, 112 : 18, 101 : 22, 89 : 27, 78 : 33, 68 : 41, 58 : 49, 49 : 58, 41 : 68, 33 : 78, 27 : 89, 22 : 101, 18 : 112, 15 : 124, 13 : 136, 13 : 148, 13 : 160, 15 : 171, 18 : 183, 22 : 194, 27 : 204, 33 : 214, 41 : 223, 49 : 231, 58 : 239, 68 : 245, 78 : 250, 89 : 254, 101 : 257, 112 : 259, 124 : 260, 136 : " description="Waits till the value returned by the color sensor on the given port will be greater or less than the given in the 'Intensity' parameter value (the intensity is specified in percents, 0 to 100).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForColorIntensityBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true" background="white"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="55" y="60" textBinded="Intensity" background="white"/>
						<label x="-55" y="60" text="Intensity:"/>
						<label x="55" y="80" textBinded="Sign" background="white"/>
						<label x="-85" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Intensity" type="string" name="Intensity">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="NxtSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Color" name="NxtWaitForColor" path="196, 12 : 196, 154 :  | 12, 12 : 380, 12 : 380, 154 : 12, 154 : 12, 12 : " description="Waits till the color sensor on the given port will recognize the given color.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForColorBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="37" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="37" y="60" textBinded="Color"/>
						<label x="0" y="60" text="Color:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Color" type="Color" name="Color">
							<default>red</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="NxtSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Light" name="NxtWaitForLight" path="249, 220 : 349, 220 :  | 130, 12 : 130, 102 :  | 249, 221 : 248, 232 : 247, 244 : 244, 255 : 240, 266 : 235, 276 : 229, 286 : 222, 296 : 214, 304 : 206, 312 : 196, 319 : 186, 325 : 176, 330 : 165, 334 : 154, 337 : 142, 338 : 131, 339 : 120, 338 : 108, 337 : 97, 334 : 86, 330 : 76, 325 : 66, 319 : 56, 312 : 48, 304 : 40, 296 : 33, 286 : 27, 276 : 22, 266 : 18, 255 : 15, 244 : 14, 232 : 13, 221 : 14, 210 : 15, 198 : 18, 187 : 22, 176 : 27, 166 : 33, 156 : 40, 146 : 48, 138 : 56, 130 : 66, 123 : 76, 117 : 86, 112 : 97, 108 : 108, 105 : 120, 104 : 131, 103 : 142, 104 : 154, 105 : 165, 108 : 176, 112 : 186, 117 : 196, 123 : 206, 130 : 214, 138 : 222, 146 : 229, 156 : 235, 166 : 240, 176 : 244, 187 : 247, 198 : 248, 210 : 249, 221 : " description="Waits till the value returned by the light sensor on the given port will be greater or less than the given in the 'Percents' parameter value (0 to 100).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForLightBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="45" y="60" textBinded="Percents"/>
						<label x="-26" y="60" text="Percents:"/>
						<label x="50" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Percents" type="string" name="Percents">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="NxtSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Encoder" name="NxtWaitForEncoder" path="203, 211 : 168, 176 :  | 203, 211 : 240, 174 :  | 12, 48 : 50, 86 :  | 12, 48 : 48, 12 :  | 203, 48 : 203, 211 :  | 12, 48 : 203, 48 : " description="Waits till the tacho limit of the motor on the given port will reach the value of the 'Tacho Limit' parameter.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForEncoderBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="40" y="60" textBinded="TachoLimit"/>
						<label x="-90" y="60" text="Tacho Limit:"/>
						<label x="60" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Port" type="string" name="Port">
							<default>B</default>
						</property>
						<property displayedName="Tacho Limit" type="string" name="TachoLimit"/>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Button" name="NxtWaitForButton" description="Waits for press of a button on a brick.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForButtonsBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="60" textBinded="Button"/>
						<label x="-20" y="60" text="Button:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
				<container/>
				<properties>
					<property displayedName="Button" type="NxtButtons" name="Button">
						<default>Enter</default>
					</property>
				</properties>
				<generalizations>
					<parent parentName="AbstractNode"/>
				</generalizations>
				</logic>
			</node>

			<!-- Waiting for sensors blocks, TRIK -->
			<node name="TrikSensorBlock">
				<logic>
					<container/>
					<properties/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node name="TrikAnalogSensorBlock">
				<logic>
					<container/>
					<properties>
						<property displayedName="Port" type="TrikV6AnalogSensorPort" name="Port">
							<default>A1</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="TrikSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node name="TrikDigitalSensorBlock">
				<logic>
					<container/>
					<properties>
						<property displayedName="Port" type="TrikV6DigitalSensorPort" name="Port">
							<default>D1</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="TrikSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Light" name="TrikWaitForLight" path="249, 220 : 349, 220 :  | 130, 12 : 130, 102 :  | 249, 221 : 248, 232 : 247, 244 : 244, 255 : 240, 266 : 235, 276 : 229, 286 : 222, 296 : 214, 304 : 206, 312 : 196, 319 : 186, 325 : 176, 330 : 165, 334 : 154, 337 : 142, 338 : 131, 339 : 120, 338 : 108, 337 : 97, 334 : 86, 330 : 76, 325 : 66, 319 : 56, 312 : 48, 304 : 40, 296 : 33, 286 : 27, 276 : 22, 266 : 18, 255 : 15, 244 : 14, 232 : 13, 221 : 14, 210 : 15, 198 : 18, 187 : 22, 176 : 27, 166 : 33, 156 : 40, 146 : 48, 138 : 56, 130 : 66, 123 : 76, 117 : 86, 112 : 97, 108 : 108, 105 : 120, 104 : 131, 103 : 142, 104 : 154, 105 : 165, 108 : 176, 112 : 186, 117 : 196, 123 : 206, 130 : 214, 138 : 222, 146 : 229, 156 : 235, 166 : 240, 176 : 244, 187 : 247, 198 : 248, 210 : 249, 221 : " description="Waits till the value returned by the light sensor on the given port will be greater or less than the given in the 'Percents' parameter value (0 to 100).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForLightBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="45" y="60" textBinded="Percents"/>
						<label x="-26" y="60" text="Percents:"/>
						<label x="50" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Percents" type="string" name="Percents">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="TrikAnalogSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Ultrasonic Distance" name="TrikWaitForSonarDistance" description="Waits till the value returned by the ultrasonic sensor on the given port will be greater or less than the given in the 'Distance' parameter value (the distance is specified in centimeters, 0 to 255).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForSonarDistanceBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="50" y="60" textBinded="Distance"/>
						<label x="-60" y="60" text="Distance:"/>
						<label x="55" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Distance" type="string" name="Distance">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="TrikDigitalSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Infrared Distance" name="TrikWaitForIRDistance" path="190, 162 : 219, 122 :  | 219, 122 : 190, 86 :  | 120, 122 : 219, 122 :  | 12, 118 : 118, 12 :  | 12, 118 : 118, 224 :  | 118, 12 : 118, 224 : " description="Waits till the value returned by the infrared sensor on the given port will be greater or less than the given in the 'Distance' parameter value (the distance is specified in centimeters, 0 to 255).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForSonarDistanceBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="50" y="60" textBinded="Distance"/>
						<label x="-60" y="60" text="Distance:"/>
						<label x="55" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Distance" type="string" name="Distance">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="TrikAnalogSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Gyroscope" path="101, 106 : 212, 106 :  | 156, 183 : 156, 107 :  | 12, 183 : 156, 183 :  | 12, 12 : 12, 183 :  | 12, 12 : 164, 12 : " name="TrikWaitForGyroscope" description="Waits till the value returned by the gyroscope on the given port will be greater or less than the given in the 'Degrees/sec' parameter value.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForGyroscopeBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="35" y="60" textBinded="Degrees"/>
						<label x="-56" y="60" text="Degrees/sec:"/>
						<label x="55" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Degrees/sec" type="string" name="Degrees">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Accelerometer" name="TrikWaitForAccelerometer">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForAccelerometerBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="Acceleration"/>
						<label x="-26" y="60" text="Acceleration:"/>
						<label x="50" y="80" textBinded="Sign"/>
						<label x="-100" y="80" text="Sign:"/>
						<label x="50" y="100" textBinded="AccelerationAxis"/>
						<label x="-80" y="100" text="Acceleration Axis:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Acceleration" type="string" name="Acceleration">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
						<property displayedName="Acceleration Axis" type="Accelerations" name="AccelerationAxis">
							<default>xAxis</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Motion" name="TrikWaitForMotion" description="Waits till the motion sensor on the given port is triggered.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForMotionBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" text="F1" hard="true" background="white"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Encoder" name="TrikWaitForEncoder" path="203, 211 : 168, 176 :  | 203, 211 : 240, 174 :  | 12, 48 : 50, 86 :  | 12, 48 : 48, 12 :  | 203, 48 : 203, 211 :  | 12, 48 : 203, 48 : " description="Waits till the tacho limit of the motor on the given port will reach the value of the 'Tacho Limit' parameter.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForEncoderBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-30" textBinded="Port" hard="true"/>
						<label x="0" y="-30" text="Port:" hard="true"/>
						<label x="40" y="60" textBinded="TachoLimit"/>
						<label x="-90" y="60" text="Tacho Limit:"/>
						<label x="60" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Port" type="string" name="Port">
							<default>B1</default>
						</property>
						<property displayedName="Tacho Limit" type="string" name="TachoLimit"/>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Button" name="TrikWaitForButton" description="Waits for press of a button on a brick.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForButtonsBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="60" textBinded="Button"/>
						<label x="-20" y="60" text="Button:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Button" type="TrikButtons" name="Button">
							<default>Up</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait Gamepad Button" name="TrikWaitGamepadButton" description="Waits for Android gamepad 'magic button' press. Buttons are identified by numbers from 1 to 5 (from left to right)">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/trikWaitGamepadButtonBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-30" y="60" text="Wait gamepad button" background="white"/>
						<label x="50" y="-30" textBinded="Button" hard="true"/>
						<label x="0" y="-30" text="Button:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
					<properties>
						<property displayedName="Button" type="int" name="Button">
							<default>1</default>
						</property>
					</properties>
				</logic>
			</node>
			<node displayedName="Wait Pad Press" name="TrikWaitPadPress" description="Waits for Android gamepad pad press (left pad has number 1, right pad - number 2).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/trikWaitPadPressBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-20" y="60" text="Wait pad press" background="white"/>
						<label x="50" y="-30" textBinded="Pad" hard="true"/>
						<label x="0" y="-30" text="Pad:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
					<properties>
						<property displayedName="Pad" type="int" name="Pad">
							<default>1</default>
						</property>
					</properties>
				</logic>
			</node>
			<node displayedName="Wait for Gamepad Wheel" name="TrikWaitGamepadWheel" description="Waits till the value returned by gamepad wheel be greater or less than the given in the 'Angle' parameter value. Angle is measured from -100 (max left) to 100 (max right).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/trikWaitGamepadWheelBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-70" y="-30" text="Wait for Gamepad Wheel" hard="true"/>
						<label x="50" y="60" textBinded="Angle"/>
						<label x="-30" y="60" text="Angle:"/>
						<label x="55" y="80" textBinded="Sign"/>
						<label x="-90" y="80" text="Sign:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Angle" type="string" name="Angle">
							<default>0</default>
						</property>
						<property displayedName="Sign" type="DistanceSign" name="Sign">
							<default>greater</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="TrikAnalogSensorBlock"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Gamepad Disconnect" name="TrikWaitGamepadDisconnect" description="Waits until Android gamepad is disconnected.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/trikWaitGamepadDisconnectBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-70" y="-30" text="Wait for Gamepad Disconnect" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties />
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Gamepad Connect" name="TrikWaitGamepadConnect" description="Waits until Android gamepad is connected.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/trikWaitGamepadConnectBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-70" y="-30" text="Wait for Gamepad Connect" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties />
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!-- Other waiting blocks -->
			<node displayedName="Timer" name="Timer" path="12, 117 : 117, 118 :  | 117, 12 : 117, 118 :  | 222, 117 : 221, 127 : 219, 137 : 217, 147 : 214, 157 : 209, 166 : 204, 175 : 198, 183 : 191, 191 : 183, 198 : 175, 204 : 166, 209 : 157, 214 : 147, 217 : 137, 219 : 127, 221 : 117, 221 : 107, 221 : 97, 219 : 87, 217 : 77, 214 : 68, 209 : 59, 204 : 51, 198 : 43, 191 : 36, 183 : 30, 175 : 25, 166 : 20, 157 : 17, 147 : 15, 137 : 13, 127 : 13, 117 : 13, 107 : 15, 97 : 17, 87 : 20, 77 : 25, 68 : 30, 59 : 36, 51 : 43, 43 : 51, 36 : 59, 30 : 68, 25 : 77, 20 : 87, 17 : 97, 15 : 107, 13 : 117, 13 : 127, 13 : 137, 15 : 147, 17 : 157, 20 : 166, 25 : 175, 30 : 183, 36 : 191, 43 : 198, 51 : 204, 59 : 209, 68 : 214, 77 : 217, 87 : 219, 97 : 221, 107 : 222, 117 : " description="Waits for a given time in milliseconds.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/timerBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="65" y="-30" textBinded="Delay" hard="true"/>
						<label x="-30" y="-30" text="Delay (ms):" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Delay (ms)" type="string" name="Delay">
							<default>1000</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!-- Common display drawing blocks -->
			<node displayedName="Clear Screen" name="ClearScreen" description="Clears everything drawn on the robot`s screen.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/clearScreenBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Print Text" name="PrintText" description="Prints a given line in the specified coordinates on the robot`s screen. '$' token can be used in front of the identifier for printing its value. This feature is ignored in case when backslash ('\\') is written before the '$' token. Example: '\\$a = $a' expression will print '$a = 5' if the value of the variable 'a' is 5.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/printTextBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateText"/>
						<label x="0" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateText"/>
						<label x="0" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="PrintText"/>
						<label x="0" y="100" text="Text: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="string" name="XCoordinateText">
							<default>1</default>
						</property>
						<property displayedName="Y" type="string" name="YCoordinateText">
							<default>1</default>
						</property>
						<property displayedName="Text" type="string" name="PrintText">
							<default>'Enter some text here'</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Marker Down" name="MarkerDown" description="Moves the marker of the 2D model robot down to the floor: the robot will draw its trace on the floor after that. If the marker of another color is already drawing at the moment it will be replaced.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image name="images/markerDownBlock.svg" x1="0" x2="50" y1="0" y2="50" />
					</picture>
					<labels>
						<label x="27" y="-30" textBinded="Color" hard="true"/>
						<label x="-10" y="-30" text="Color:" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Color" type="BackgroundColor" name="Color">
							<default>blue</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Marker Up" name="MarkerUp" description="Lifts the marker of the 2D model robot up: the robot stops drawing its trace on the floor after that.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image name="images/markerUpBlock.svg" x1="0" x2="50" y1="0" y2="50" />
					</picture>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!-- NXT display drawing blocks -->
			<node displayedName="Draw Pixel" name="NxtDrawPixel" description="Draws one pixel in the specified coordinates on the robot screen.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawPixelBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="36" y="60" textBinded="XCoordinatePix"/>
						<label x="0" y="60" text="X: "/>
						<label x="36" y="80" textBinded="YCoordinatePix"/>
						<label x="0" y="80" text="Y: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinatePix">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinatePix">
							<default>0</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Line" name="NxtDrawLine" description="Draws a segment on the robot screen. The parameters specify the ends of the segment.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawLineBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="36" y="60" textBinded="X1CoordinateLine"/>
						<label x="0" y="60" text="X1: "/>
						<label x="36" y="80" textBinded="Y1CoordinateLine"/>
						<label x="0" y="80" text="Y1: "/>
						<label x="36" y="100" textBinded="X2CoordinateLine"/>
						<label x="0" y="100" text="X2: "/>
						<label x="36" y="120" textBinded="Y2CoordinateLine"/>
						<label x="0" y="120" text="Y2: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X1" type="int" name="X1CoordinateLine">
							<default>0</default>
						</property>
						<property displayedName="Y1" type="int" name="Y1CoordinateLine">
							<default>0</default>
						</property>
						<property displayedName="X2" type="int" name="X2CoordinateLine">
							<default>10</default>
						</property>
						<property displayedName="Y2" type="int" name="Y2CoordinateLine">
							<default>10</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Rectangle" name="NxtDrawRect" description="Draws a rectangle on the robot screen. The parameters specify the coordinates of top-left corner, the width and the height of the rectangle.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawRectBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateRect"/>
						<label x="-10" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateRect"/>
						<label x="-10" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="WidthRect"/>
						<label x="-10" y="100" text="Width: "/>
						<label x="50" y="120" textBinded="HeightRect"/>
						<label x="-10" y="120" text="Height: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinateRect">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinateRect">
							<default>0</default>
						</property>
						<property displayedName="Width" type="int" name="WidthRect">
							<default>5</default>
						</property>
						<property displayedName="Height" type="int" name="HeightRect">
							<default>5</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Circle" name="NxtDrawCircle" description="Draws on the robot screen a circle with the given center and radius.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawCircleBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateCircle"/>
						<label x="0" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateCircle"/>
						<label x="0" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="CircleRadius"/>
						<label x="0" y="100" text="Radius: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinateCircle">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinateCircle">
							<default>0</default>
						</property>
						<property displayedName="Radius" type="int" name="CircleRadius">
							<default>5</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!-- EV3 display drawing blocks -->
			<node displayedName="Draw Pixel" name="Ev3DrawPixel" description="Draws one pixel in the specified coordinates on the robot screen.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawPixelBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="36" y="60" textBinded="XCoordinatePix"/>
						<label x="0" y="60" text="X: "/>
						<label x="36" y="80" textBinded="YCoordinatePix"/>
						<label x="0" y="80" text="Y: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinatePix">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinatePix">
							<default>0</default>
						</property>
					</properties>
				<generalizations>
					<parent parentName="AbstractNode"/>
				</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Line" name="Ev3DrawLine" description="Draws a segment on the robot screen. The parameters specify the ends of the segment.">
			<graphics>
				<picture sizex="50" sizey="50">
					<image y1="0" name="images/drawLineBlock.png" x1="0" y2="50" x2="50"/>
				</picture>
				<labels>
					<label x="36" y="60" textBinded="X1CoordinateLine"/>
					<label x="0" y="60" text="X1: "/>
					<label x="36" y="80" textBinded="Y1CoordinateLine"/>
					<label x="0" y="80" text="Y1: "/>
					<label x="36" y="100" textBinded="X2CoordinateLine"/>
					<label x="0" y="100" text="X2: "/>
					<label x="36" y="120" textBinded="Y2CoordinateLine"/>
					<label x="0" y="120" text="Y2: "/>
				</labels>
				<nonResizeable/>
			</graphics>
			<logic>
				<container/>
				<properties>
					<property displayedName="X1" type="int" name="X1CoordinateLine">
						<default>0</default>
					</property>
					<property displayedName="Y1" type="int" name="Y1CoordinateLine">
						<default>0</default>
					</property>
					<property displayedName="X2" type="int" name="X2CoordinateLine">
						 <default>10</default>
					</property>
					<property displayedName="Y2" type="int" name="Y2CoordinateLine">
						<default>10</default>
					</property>
				</properties>
				<generalizations>
					<parent parentName="AbstractNode"/>
				</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Rectangle" name="Ev3DrawRect" description="Draws a rectangle on the robot screen. The parameters specify the coordinates of top-left corner, the width and the height of the rectangle.">
				<graphics>
					<picture sizex="50" sizey="50">
					<image y1="0" name="images/drawRectBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateRect"/>
						<label x="-20" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateRect"/>
						<label x="-20" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="WidthRect"/>
						<label x="-20" y="100" text="Width: "/>
						<label x="50" y="120" textBinded="HeightRect"/>
						<label x="-20" y="120" text="Height: "/>
						<label x="50" y="140" textBinded="Filled"/>
						<label x="-20" y="140" text="Filled: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinateRect">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinateRect">
							<default>0</default>
						</property>
						<property displayedName="Width" type="int" name="WidthRect">
							<default>5</default>
						</property>
							<property displayedName="Height" type="int" name="HeightRect">
								<default>5</default>
						</property>
						<property displayedName="Filled" type="bool" name="Filled">
							<default>false</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Circle" name="Ev3DrawCircle" description="Draws on the robot screen a circle with the given center and radius.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawCircleBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateCircle"/>
						<label x="-20" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateCircle"/>
						<label x="-20" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="CircleRadius"/>
						<label x="-20" y="100" text="Radius: "/>
						<label x="50" y="120" textBinded="Filled"/>
						<label x="-20" y="120" text="Filled: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
				<container/>
				<properties>
						<property displayedName="X" type="int" name="XCoordinateCircle">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinateCircle">
							<default>0</default>
						</property>
						<property displayedName="Radius" type="int" name="CircleRadius">
							<default>5</default>
						</property>
						<property displayedName="Filled" type="bool" name="Filled">
							<default>false</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!-- TRIK display drawing blocks -->
			<node displayedName="Painter Color" name="TrikSetPainterColor" description="Sets the painter color.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/brushColorBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Color:" hard="true"/>
						<label x="35" y="-30" textBinded="Color" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Color" type="BackgroundColor" name="Color">
							<default>black</default>
						</property>
					</properties>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Painter Width" name="TrikSetPainterWidth" description="Sets the painter width.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/brushWidthBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Width:" hard="true"/>
						<label x="50" y="-30" textBinded="Width" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Width" type="int" name="Width">
							<default>1</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Pixel" name="TrikDrawPixel" description="Draws one pixel in the specified coordinates on the robot screen.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawPixelBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="36" y="60" textBinded="XCoordinatePix"/>
						<label x="0" y="60" text="X: "/>
						<label x="36" y="80" textBinded="YCoordinatePix"/>
						<label x="0" y="80" text="Y: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinatePix">
							<default>5</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinatePix">
							<default>5</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Line" name="TrikDrawLine" description="Draws a segment on the robot screen. The parameters specify the ends of the segment.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawLineBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="36" y="60" textBinded="X1CoordinateLine"/>
						<label x="0" y="60" text="X1: "/>
						<label x="36" y="80" textBinded="Y1CoordinateLine"/>
						<label x="0" y="80" text="Y1: "/>
						<label x="36" y="100" textBinded="X2CoordinateLine"/>
						<label x="0" y="100" text="X2: "/>
						<label x="36" y="120" textBinded="Y2CoordinateLine"/>
						<label x="0" y="120" text="Y2: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X1" type="int" name="X1CoordinateLine">
							<default>0</default>
						</property>
						<property displayedName="Y1" type="int" name="Y1CoordinateLine">
							<default>0</default>
						</property>
						<property displayedName="X2" type="int" name="X2CoordinateLine">
							<default>10</default>
						</property>
						<property displayedName="Y2" type="int" name="Y2CoordinateLine">
							<default>10</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Rectangle" name="TrikDrawRect" description="Draws a rectangle on the robot screen. The parameters specify the coordinates of top-left corner, the width and the height of the rectangle.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawRectBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateRect"/>
						<label x="-10" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateRect"/>
						<label x="-10" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="WidthRect"/>
						<label x="-10" y="100" text="Width: "/>
						<label x="50" y="120" textBinded="HeightRect"/>
						<label x="-10" y="120" text="Height: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinateRect">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinateRect">
							<default>0</default>
						</property>
						<property displayedName="Width" type="int" name="WidthRect">
							<default>5</default>
						</property>
						<property displayedName="Height" type="int" name="HeightRect">
							<default>5</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Ellipse" name="TrikDrawEllipse" description="Draws the ellipse defined by the rectangle beginning at (x, y) with the given width and height.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawCircleBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateEllipse"/>
						<label x="-10" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateEllipse"/>
						<label x="-10" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="WidthEllipse"/>
						<label x="-10" y="100" text="Width: "/>
						<label x="50" y="120" textBinded="HeightEllipse"/>
						<label x="-10" y="120" text="Height: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinateEllipse">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinateEllipse">
							<default>0</default>
						</property>
						<property displayedName="Width" type="int" name="WidthEllipse">
							<default>5</default>
						</property>
						<property displayedName="Height" type="int" name="HeightEllipse">
							<default>5</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Draw Arc" name="TrikDrawArc" description="Draws the arc defined by the rectangle beginning at (x, y) with the specified width and height, and the given startAngle and spanAngle.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/drawArcBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateArc"/>
						<label x="-10" y="60" text="X: "/>
						<label x="50" y="80" textBinded="YCoordinateArc"/>
						<label x="-10" y="80" text="Y: "/>
						<label x="50" y="100" textBinded="WidthArc"/>
						<label x="-10" y="100" text="Width: "/>
						<label x="50" y="120" textBinded="HeightArc"/>
						<label x="-10" y="120" text="Height: "/>
						<label x="100" y="140" textBinded="StartAngle"/>
						<label x="-10" y="140" text="StartAngle: "/>
						<label x="90" y="160" textBinded="SpanAngle"/>
						<label x="-10" y="160" text="SpanAngle: "/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="int" name="XCoordinateArc">
							<default>0</default>
						</property>
						<property displayedName="Y" type="int" name="YCoordinateArc">
							<default>0</default>
						</property>
						<property displayedName="Width" type="int" name="WidthArc">
							<default>5</default>
						</property>
						<property displayedName="Height" type="int" name="HeightArc">
							<default>5</default>
						</property>
						<property displayedName="StartAngle" type="int" name="StartAngle">
							<default>20</default>
						</property>
						<property displayedName="SpanAngle" type="int" name="SpanAngle">
							<default>20</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Smile" name="TrikSmile" path="161, 71 : 166, 57 :  | 149, 82 : 161, 70 :  | 113, 91 : 149, 83 :  | 67, 91 : 113, 91 :  | 29, 84 : 65, 91 :  | 17, 74 : 28, 83 :  | 12, 59 : 17, 73 :  | 130, 13 : 130, 51 :  | 62, 12 : 62, 51 : " description="Draws a smile on the robot`s screen :)">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/smileBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Sad Smile" name="TrikSadSmile" path="156, 91 : 173, 110 :  | 115, 73 : 156, 91 :  | 78, 73 : 114, 73 :  | 33, 85 : 78, 73 :  | 12, 106 : 33, 85 :  | 126, 12 : 126, 48 :  | 63, 12 : 63, 49 : " description="Draws a sad smile on the robot`s screen :(">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/sadSmileBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Background Color" name="TrikSetBackground" description="Sets the background color of the current picture on the robot`s screen.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/setBackgroundBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Color:" hard="true"/>
						<label x="35" y="-30" textBinded="Color" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Color" type="BackgroundColor" name="Color">
							<default>white</default>
						</property>
					</properties>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Say" name="TrikSay" description="Synthesizes the given phrase and plays it on the robot.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/sayBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-15" y="-30" text="Text:" hard="true"/>
						<label x="35" y="-30" textBinded="Text" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Text" type="string" name="Text">
							<default>\"Hi!\"</default>
						</property>
					</properties>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Send message" name="TrikSendMessage" description="Sends message to another robot.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/sendMessageBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-40" y="60" text="Message:" hard="false"/>
						<label x="45" y="60" textBinded="Message" hard="false"/>
						<label x="-40" y="80" text="Hull number:" hard="false"/>
						<label x="45" y="80" textBinded="HullNumber" hard="false"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Message" type="string" name="Message" />
						<property displayedName="Hull Number" type="string" name="HullNumber" />
					</properties>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Wait for Message" name="TrikWaitForMessage" description="Waits for a message from another robot and stores it into a variable when it arrives.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/waitForMessageBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-40" y="60" text="Variable:" hard="false"/>
						<label x="50" y="60" textBinded="Variable" hard="false"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Variable" type="string" name="Variable" />
					</properties>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
		</graphicTypes>

		<palette sorted="false">
			<group name="Algorithms">
				<element name="InitialNode"/>
				<element name="FinalNode"/>
				<element name="Function"/>
				<element name="IfBlock"/>
				<element name="SwitchBlock"/>
				<element name="Loop"/>
				<element name="Subprogram"/>
				<element name="Fork"/>
				<element name="VariableInit"/>
				<element name="CommentBlock"/>
			</group>
			<group name="Actions">
				<element name="NxtBeep"/>
				<element name="NxtPlayTone"/>
				<element name="NxtEnginesForward"/>
				<element name="NxtEnginesBackward"/>
				<element name="NxtEnginesStop"/>
				<element name="Ev3Beep"/>
				<element name="Ev3PlayTone"/>
				<element name="Ev3EnginesForward"/>
				<element name="Ev3EnginesBackward"/>
				<element name="Ev3EnginesStop"/>
				<element name="NxtClearEncoder"/>
				<element name="TrikPlayTone"/>
				<element name="TrikV6EnginesForward"/>
				<element name="TrikV6EnginesBackward"/>
				<element name="TrikV6EnginesStop"/>
				<element name="TrikV6ClearEncoder"/>
				<element name="TrikAngularServo"/>
				<element name="TrikSay"/>
				<element name="TrikLed" />
				<element name="TrikSystem" />
				<element name="TrikInitCamera" />
				<element name="TrikDetect" />
				<element name="TrikDetectorToVariable" />
				<element name="TrikSendMessage" />
			</group>
			<group name="Wait">
				<element name="Timer"/>
				<element name="Ev3WaitForTouchSensor"/>
<!--				<element name="Ev3WaitForColor"/>
				<element name="Ev3WaitForLight"/>-->
				<element name="Ev3WaitForRangeSensor"/>
				<element name="Ev3WaitForButton"/>
				<element name="NxtWaitForTouchSensor"/>
				<element name="NxtWaitForSonarDistance"/>
				<element name="NxtWaitForColor"/>
				<element name="NxtWaitForEncoder"/>
				<element name="NxtWaitForColorIntensity"/>
				<element name="NxtWaitForLight"/>
				<element name="NxtWaitForSound"/>
				<element name="NxtWaitForButton"/>
				<element name="TrikWaitForLight"/>
				<element name="TrikWaitForSonarDistance"/>
				<element name="TrikWaitForIRDistance"/>
				<element name="TrikWaitForMotion"/>
				<element name="TrikWaitForEncoder"/>
				<element name="TrikWaitForButton"/>
				<element name="TrikWaitForMessage" />
				<element name="TrikWaitGamepadButton" />
				<element name="TrikWaitPadPress" />
				<element name="TrikWaitGamepadWheel" />
				<element name="TrikWaitGamepadDisconnect" />
				<element name="TrikWaitGamepadConnect" />
			</group>
			<group name="Drawing">
				<element name="NxtDrawRect"/>
				<element name="NxtDrawPixel"/>
				<element name="NxtDrawLine"/>
				<element name="NxtDrawCircle"/>
				<element name="Ev3DrawRect"/>
				<element name="Ev3DrawPixel"/>
				<element name="Ev3DrawLine"/>
				<element name="Ev3DrawCircle"/>
				<element name="TrikSetPainterColor"/>
				<element name="TrikSetPainterWidth"/>
				<element name="TrikDrawPixel"/>
				<element name="TrikDrawLine"/>
				<element name="TrikDrawRect"/>
				<element name="TrikDrawEllipse"/>
				<element name="TrikDrawArc"/>
				<element name="TrikSmile"/>
				<element name="TrikSadSmile"/>
				<element name="TrikSetBackground"/>
				<element name="PrintText"/>
				<element name="ClearScreen"/>
				<element name="MarkerDown"/>
				<element name="MarkerUp"/>
			</group>
		</palette>
	</diagram>
</metamodel>
