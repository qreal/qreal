<?xml version="1.0" encoding="utf-8"?>
<metamodel xmlns="http://schema.real.com/schema/" version="3.1.4" name="RobotsMetamodel">
	<include>../../../commonMetamodels/kernelMetamodel.xml</include>
	<include>../../../commonMetamodels/basicBehaviorsMetamodel.xml</include>
	<include>../../../commonMetamodels/basicActionsMetamodel.xml</include>
	<namespace>UML 2.0</namespace>
	<diagram displayedName="Robot`s Behaviour Diagram" nodeName="RobotsDiagramGroup" name="RobotsDiagram">
		<nonGraphicTypes>
			<enum name="GuardType" editable="true">
				<value name="iteration" displayedName="body"/>
				<value name="true" displayedName="true"/>
				<value name="false" displayedName="false"/>
			</enum>
			<enum name="Color">
				<value name="black" displayedName="black"/>
				<value name="blue" displayedName="blue"/>
				<value name="green" displayedName="green"/>
				<value name="yellow" displayedName="yellow"/>
				<value name="red" displayedName="red"/>
				<value name="white" displayedName="white"/>
			</enum>
			<enum name="DistanceSign">
				<value name="greater" displayedName="greater"/>
				<value name="less" displayedName="less"/>
				<value name="notLess" displayedName="not less"/>
				<value name="notGreater" displayedName="not greater"/>
			</enum>
			<enum name="Accelerations">
				<value name="xAxis" displayedName="x-axis"/>
				<value name="yAxis" displayedName="y-axis"/>
				<value name="zAxis" displayedName="z-axis"/>
				<value name="normal" displayedName="norm"/>
			</enum>
			<enum name="BreakEngineMode">
				<value name="break" displayedName="break"/>
				<value name="float" displayedName="float"/>
			</enum>
			<groups>
				<group name="RobotsDiagramGroup" rootNode="diagram">
					<groupNode type="RobotsDiagramNode" name="diagram" xPosition="0" yPosition="0"/>
					<groupNode type="InitialNode" name="initialNode" xPosition="50" yPosition="300" parent="diagram"/>
				</group>
				<group name="SubprogramDiagramGroup" rootNode="diagram">
					<groupNode type="SubprogramDiagram" name="diagram" xPosition="0" yPosition="0"/>
					<groupNode type="InitialNode" name="initialNode" xPosition="50" yPosition="300" parent="diagram"/>
				</group>
			</groups>
		</nonGraphicTypes>
		<graphicTypes>
			<!-- Algorithms -->
			<node displayedName="Robot`s Behaviour Diagram"  name="RobotsDiagramNode">
				<graphics>
					<picture sizex="204" sizey="204">
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="2" stroke-width="0" x1="22" y2="2" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="202" stroke-width="0" x1="22" y2="202" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="2" y2="182" fill-style="none" x2="2"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="202" y2="182" fill-style="none" x2="202"/>
						<arc spanAngle="1440" startAngle="1440" y1="2" x1="2" y2="42" x2="42"/>
						<arc spanAngle="1440" startAngle="0" y1="2" x1="162" y2="42" x2="202"/>
						<arc spanAngle="1440" startAngle="2880" y1="162" x1="2" y2="202" x2="42"/>
						<arc spanAngle="-1440" startAngle="0" y1="162" x1="162" y2="202" x2="202"/>
					</picture>
					<labels>
						<label x="42" y="12" textBinded="name"/>
					</labels>
					<ports>
						<pointPort x="2" y="102"/>
						<pointPort x="102" y="2"/>
						<pointPort x="202" y="102"/>
						<pointPort x="102" y="202"/>
					</ports>
				</graphics>
				<logic>
					<container>
						<contains type="AbstractNode"/>
					</container>
					<properties>
						<property displayedName="Devices configuration" type="string" name="devicesConfiguration" />
					</properties>
				</logic>
			</node>
			<node name="AbstractNode" abstract="true">
				<graphics>
					<picture sizex="50" sizey="50">
					</picture>
					<ports>
						<linePort>
							<start startx="0" starty="5"/>
							<end endx="0" endy="45"/>
						</linePort>
						<linePort>
							<start startx="5" starty="0"/>
							<end endx="45" endy="0"/>
						</linePort>
						<linePort>
							<start startx="50" starty="5"/>
							<end endx="50" endy="45"/>
						</linePort>
						<linePort>
							<start startx="5" starty="50"/>
							<end endx="45" endy="50"/>
						</linePort>
					</ports>
				</graphics>
				<logic>
					<container/>
				</logic>
			</node>
			<node displayedName="Subprogram Diagram" name="SubprogramDiagram">
				<graphics>
					<picture sizex="204" sizey="204">
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="2" stroke-width="0" x1="22" y2="2" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="202" stroke-width="0" x1="22" y2="202" fill-style="none" x2="182"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="2" y2="182" fill-style="none" x2="2"/>
						<line fill="#000000" stroke-style="solid" stroke="#000000" y1="22" stroke-width="0" x1="202" y2="182" fill-style="none" x2="202"/>
						<arc spanAngle="1440" startAngle="1440" y1="2" x1="2" y2="42" x2="42"/>
						<arc spanAngle="1440" startAngle="0" y1="2" x1="162" y2="42" x2="202"/>
						<arc spanAngle="1440" startAngle="2880" y1="162" x1="2" y2="202" x2="42"/>
						<arc spanAngle="-1440" startAngle="0" y1="162" x1="162" y2="202" x2="202"/>
					</picture>
					<labels>
						<label x="42" y="12" textBinded="name"/>
					</labels>
					<ports>
						<pointPort x="2" y="102"/>
						<pointPort x="102" y="2"/>
						<pointPort x="202" y="102"/>
						<pointPort x="102" y="202"/>
					</ports>
				</graphics>
				<logic>
					<container>
						<contains type="AbstractNode"/>
					</container>
				</logic>
			</node>
			<node displayedName="Final Node" name="FinalNode" path="13, 200 : 198, 15 :  | 12, 12 : 198, 198 : " description="The final node of the program. If the program consists of some parallel execution lines the reachment of this block terminates the corresponding execution line. This block can`t have outgoing links.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/finalBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Comment" name="CommentBlock" description="This block can hold text notes that are ignored by generators and interpreters. Use it for improving the diagram readability.">
				<graphics>
					<picture sizex="200" sizey="100">
						<line y1="0" y2="100" fill="#ffffff" stroke="#000000" x1="0" x2="0" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="100" y2="100" fill="#ffffff" stroke="#000000" x1="0" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="20" y2="100" fill="#ffffff" stroke="#000000" x1="200" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="0" y2="20" fill="#ffffff" stroke="#000000" x1="180" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="0" y2="0" fill="#ffffff" stroke="#000000" x1="0" x2="178" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="0" y2="20" fill="#ffffff" stroke="#000000" x1="180" x2="180" fill-style="none" stroke-style="solid" stroke-width="0"/>
						<line y1="20" y2="20" fill="#ffffff" stroke="#000000" x1="180" x2="200" fill-style="none" stroke-style="solid" stroke-width="0"/>
					</picture>
					<labels>
						<label x="20" y="20" textBinded="Comment" hard="true" background="white"/>
					</labels>
					<ports>
						<linePort>
							<start startx="0" starty="5"/>
							<end endx="0" endy="95"/>
						</linePort>
						<linePort>
							<start startx="5" starty="0"/>
							<end endx="175" endy="0"/>
						</linePort>
						<linePort>
							<start startx="200" starty="25"/>
							<end endx="200" endy="95"/>
						</linePort>
						<linePort>
							<start startx="5" starty="100"/>
							<end endx="195" endy="100"/>
						</linePort>
						<linePort>
							<start startx="180" starty="0"/>
							<end endx="200" endy="20"/>
						</linePort>
					</ports>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Comment" type="string" name="Comment">
							<default>Enter some text here...</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Subprogram" name="Subprogram" description="Subprogram call. Subprograms are used for splitting repetitive program parts into a separate diagram and then calling it from main diagram or other subprograms. When this block is added into a diagram it will be suggested to enter subprogram name. The double click on subprogram call block may open the corresponding subprogram diagram. Moreover user palette will appear containing existing subrpograms, they can be dragged into a diagram like the usual blocks.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/subprogramRobotsBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="-20" y="-35" textBinded="name" hard="true"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
					<explodesTo>
						<target type="SubprogramDiagramGroup" makeReusable="true" requireImmediateLinkage="true"/>
					</explodesTo>
				</logic>
			</node>
			<node displayedName="Variable Initialization" name="VariableInit" description="Assigns a given value to a given variable.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/variableInitBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="33" y="60" textBinded="variable" background="white" prefix="Variable:"/>
						<label x="33" y="90" textBinded="value" background="white" prefix="Value:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Variable" type="string" name="variable">
							<default>x</default>
						</property>
						<property displayedName="Value" type="string" name="value">
							<default>0</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
					<container/>
				</logic>
			</node>
			<node displayedName="Random Initialization" name="Randomizer" description="Sets a variable value to a random value inside given interval.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/randomizerBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="30" y="60" textBinded="Variable" background="white" prefix="Variable:"/>
						<label x="30" y="90" textBinded="LowerBound" background="white" prefix="From:"/>
						<label x="30" y="120" textBinded="UpperBound" background="white" prefix="To:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<properties>
						<property displayedName="Variable" type="string" name="Variable">
							<default>x</default>
						</property>
						<property displayedName="From" type="string" name="LowerBound">
							<default>0</default>
						</property>
						<property displayedName="To" type="string" name="UpperBound">
							<default>10</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
					<container/>
				</logic>
			</node>
			<node displayedName="Initial Node" name="InitialNode" path="210, 111 : 209, 120 : 208, 130 : 205, 139 : 202, 148 : 198, 157 : 193, 166 : 187, 173 : 181, 181 : 173, 187 : 166, 193 : 157, 198 : 148, 202 : 139, 205 : 130, 208 : 120, 209 : 111, 209 : 102, 209 : 92, 208 : 83, 205 : 74, 202 : 65, 198 : 56, 193 : 49, 187 : 41, 181 : 35, 173 : 29, 166 : 24, 157 : 20, 148 : 17, 139 : 14, 130 : 13, 120 : 13, 111 : 13, 102 : 14, 92 : 17, 83 : 20, 74 : 24, 65 : 29, 56 : 35, 49 : 41, 41 : 49, 35 : 56, 29 : 65, 24 : 74, 20 : 83, 17 : 92, 14 : 102, 13 : 111, 13 : 120, 13 : 130, 14 : 139, 17 : 148, 20 : 157, 24 : 166, 29 : 173, 35 : 181, 41 : 187, 49 : 193, 56 : 198, 65 : 202, 74 : 205, 83 : 208, 92 : 209, 102 : 210, 111 : " description="The entry point of the program execution. Each diagram should have only one such block, it must not have incomming links and it must have only one outgoing link. The interpretation process starts from exactly this block.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/initialBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<edge displayedName="Link" name="ControlFlow" description="For creating a link between two elements A and B you can just hover a mouse above A, press the right mouse button and (without releasing it) draw a line to the element B. Alternatively you can just 'pull' a link from a small blue circle next to the element.">
				<graphics>
					<lineType type="solidLine"/>
					<shape type="broken"/>
					<labels>
						<label textBinded="Guard" hard="true"/>
					</labels>
				</graphics>
				<logic>
					<associations endType="open_arrow" beginType="no_arrow">
						<association beginName="begin" endName="end"/>
					</associations>
					<possibleEdges>
						<possibleEdge beginName="NonTyped" directed="false" endName="NonTyped"/>
					</possibleEdges>
					<properties>
						<property displayedName="Guard" type="GuardType" name="Guard"/>
					</properties>
					<dividability isDividable="true"/>
				</logic>
			</edge>
			<node displayedName="Loop" name="Loop" path="154, 251 : 205, 302 :  | 154, 251 : 209, 196 :  | 100, 12 : 154, 66 :  | 154, 66 : 103, 117 :  | 12, 66 : 297, 66 : 297, 251 : 12, 251 : 12, 66 : " description="This block executes a sequence of blocks for a given number of times. The number of repetitions is specified by the 'Iterations' parameter. This block must have two outgoing links. One of them must be marked with the 'body' guard (that means that the property 'Guard' of the link must be set to 'body' value). Another outgoing link must be unmarked: the program execution will be proceeded through this link when it will go through our 'Loop' block for the given number of times.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/loopBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="-35" textBinded="Iterations" hard="true" background="white" prefix="Iterations:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Iterations" type="string" name="Iterations">
							<default>10</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Fork" name="Fork" path="13, 86 : 231, 86 :  | 12, 12 : 231, 12 : " description="Separates program execution into a number of threads that will be executed concurrently from the programmers`s point of view. For example in such way signal from sensor and some time interval can be waited synchroniously. This block must have at least two outgoing links. 'Guard' property of every link must contain unique thread identifiers, and one of those identifiers must be the same as the identifier of a thread where fork is placed (it must be 'main' if it is the first fork in a program.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/forkBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Join" name="Join" description="Joins a number of threads into one. 'Guard' property of the single outgoing link must contain an identifier of one of threads being joined. The specified thread would wait until the rest of them finish execution, and then proceed in a normal way.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/joinBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Kill Thread" name="KillThread" description="Terminates execution of a specified thread.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/killThreadBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="30" y="60" textBinded="Thread" background="white" prefix="Thread:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property name="Thread" displayedName="Thread" type="string">
							<default>main</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Send Message To Thread" name="SendMessageThreads" description="Sends a message to a specified thread.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/sendMessageThreadsBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="30" y="60" textBinded="Thread" background="white" prefix="Thread:"/>
						<label x="30" y="90" textBinded="Message" background="white" prefix="Message:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property name="Thread" displayedName="Thread" type="string"/>
						<property name="Message" displayedName="Message" type="string"/>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Receive Message From Thread" name="ReceiveMessageThreads" description="Receive a message sent to a thread from which this block is called.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/receiveMessageThreadsBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="30" y="60" textBinded="Variable" background="white" prefix="Variable:"/>
						<label x="30" y="90" textBinded="Synchronized" background="white" prefix="Synchronized:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property name="Variable" displayedName="Variable" type="string"/>
						<property name="Synchronized" displayedName="Synchronized" type="bool">
							<default>true</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Function" name="Function" path="58, 12 : 58, 172 :  | 58, 12 : 148, 12 :  | 12, 96 : 108, 96 : " description="Evaluates a value of the given expression. Also new variables can be defined in this block. See the 'Expressions Syntax' chapter in help for more information about 'Function' block syntax.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/functionBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="30" y="60" textBinded="Body" background="white" prefix="Body:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Body" type="string" name="Body"/>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Condition" name="IfBlock" path="96, 182 : 180, 94 :  | 98, 12 : 180, 94 :  | 12, 98 : 96, 182 :  | 98, 12 : 12, 98 : " description="Separates program execution in correspondece with the given condition. The 'Condition' parameter value must be some boolean expression that will determine subsequent program execution line. This block must have two outgoing links, at least one of them must have 'Guard' parameter set to 'true' or 'false'. The execution will be proceed trough the link marked with the guard corresponding to 'Condition' parameter of the block.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/ifBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="40" y="60" textBinded="Condition" background="white" prefix="Condition:" />
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Condition" type="string" name="Condition">
							<default>x > 0</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="End if" name="FiBlock" description="Unites control flow from different condition branches.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/endIfBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Switch" name="SwitchBlock" description="Selects the program execution branch in correspondence with some expression value. The value of the expression written in 'Expression' property is compared to the values on the outgoing links. If equal value is found then execution will be proceeded by that branch. Else branch without a marker will be selected.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/switchBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="Expression" background="white" prefix="Expression:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Expression" type="string" name="Expression">
							<default>x</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!--- Engine movement commands -->
			<node name="EngineCommand">
				<logic>
					<container/>
					<properties>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node name="EngineMovementCommand">
				<logic>
					<container/>
					<properties>
						<property displayedName="Power (%)" type="string" name="Power">
							<default>100</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="EngineCommand"/>
					</generalizations>
				</logic>
			</node>

			<!-- Other waiting blocks -->
			<node displayedName="Timer" name="Timer" path="12, 117 : 117, 118 :  | 117, 12 : 117, 118 :  | 222, 117 : 221, 127 : 219, 137 : 217, 147 : 214, 157 : 209, 166 : 204, 175 : 198, 183 : 191, 191 : 183, 198 : 175, 204 : 166, 209 : 157, 214 : 147, 217 : 137, 219 : 127, 221 : 117, 221 : 107, 221 : 97, 219 : 87, 217 : 77, 214 : 68, 209 : 59, 204 : 51, 198 : 43, 191 : 36, 183 : 30, 175 : 25, 166 : 20, 157 : 17, 147 : 15, 137 : 13, 127 : 13, 117 : 13, 107 : 15, 97 : 17, 87 : 20, 77 : 25, 68 : 30, 59 : 36, 51 : 43, 43 : 51, 36 : 59, 30 : 68, 25 : 77, 20 : 87, 17 : 97, 15 : 107, 13 : 117, 13 : 127, 13 : 137, 15 : 147, 17 : 157, 20 : 166, 25 : 175, 30 : 183, 36 : 191, 43 : 198, 51 : 204, 59 : 209, 68 : 214, 77 : 217, 87 : 219, 97 : 221, 107 : 222, 117 : " description="Waits for a given time in milliseconds.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/timerBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="30" y="-35" textBinded="Delay" hard="true" prefix="Delay:" suffix="ms"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Delay (ms)" type="string" name="Delay">
							<default>1000</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Get Button Code" name="GetButtonCode" description="Assigns a given variable a value of pressed button. If no button is pressed at the moment and 'Wait' property is false when variable is set to -1.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/getButtonCodeBlock.svg" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="30" y="60" textBinded="Variable" hard="true" prefix="Variable:"/>
						<label x="30" y="90" textBinded="Wait" hard="true" prefix="Wait:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Variable" type="string" name="Variable">
							<default>x</default>
						</property>
						<property displayedName="Wait" type="bool" name="Wait">
							<default>true</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>

			<!-- Common display drawing blocks -->
			<node displayedName="Clear Screen" name="ClearScreen" description="Clears everything drawn on the robot`s screen.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/clearScreenBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels/>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Redraw" type="bool" name="Redraw">
							<default>true</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Print Text" name="PrintText" description="Prints a given line in the specified coordinates on the robot`s screen. The value of 'Text' property is interpreted as a plain text unless 'Evaluate' property is set to true, then it will be interpreted as an expression (that may be useful for example when debugging variables values).">
				<graphics>
					<picture sizex="50" sizey="50">
						<image y1="0" name="images/printTextBlock.png" x1="0" y2="50" x2="50"/>
					</picture>
					<labels>
						<label x="50" y="60" textBinded="XCoordinateText" prefix="X:"/>
						<label x="50" y="90" textBinded="YCoordinateText" prefix="Y:"/>
						<label x="50" y="120" textBinded="PrintText" prefix="Text:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="X" type="string" name="XCoordinateText">
							<default>1</default>
						</property>
						<property displayedName="Y" type="string" name="YCoordinateText">
							<default>1</default>
						</property>
						<property displayedName="Text" type="string" name="PrintText">
							<default>Enter some text here</default>
						</property>
						<property displayedName="Evaluate" type="bool" name="Evaluate">
							<default>false</default>
						</property>
						<property displayedName="Redraw" type="bool" name="Redraw">
							<default>true</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Marker Down" name="MarkerDown" description="Moves the marker of the 2D model robot down to the floor: the robot will draw its trace on the floor after that. If the marker of another color is already drawing at the moment it will be replaced.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image name="images/markerDownBlock.svg" x1="0" x2="50" y1="0" y2="50" />
					</picture>
					<labels>
						<label x="27" y="-35" textBinded="Color" hard="true" prefix="Color:"/>
					</labels>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<properties>
						<property displayedName="Color" type="BackgroundColor" name="Color">
							<default>blue</default>
						</property>
					</properties>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
			<node displayedName="Marker Up" name="MarkerUp" description="Lifts the marker of the 2D model robot up: the robot stops drawing its trace on the floor after that.">
				<graphics>
					<picture sizex="50" sizey="50">
						<image name="images/markerUpBlock.svg" x1="0" x2="50" y1="0" y2="50" />
					</picture>
					<nonResizeable/>
				</graphics>
				<logic>
					<container/>
					<generalizations>
						<parent parentName="AbstractNode"/>
					</generalizations>
				</logic>
			</node>
		</graphicTypes>

		<palette sorted="false">
			<group name="Algorithms">
				<element name="InitialNode"/>
				<element name="FinalNode"/>
				<element name="Function"/>
				<element name="IfBlock"/>
				<element name="FiBlock"/>
				<element name="SwitchBlock"/>
				<element name="Loop"/>
				<element name="Subprogram"/>
				<element name="Fork"/>
				<element name="Join"/>
				<element name="KillThread"/>
				<element name="VariableInit"/>
				<element name="Randomizer"/>
				<element name="CommentBlock"/>
			</group>
			<group name="Actions">
				<element name="SendMessageThreads"/>
				<element name="GetButtonCode"/>
			</group>
			<group name="Wait">
				<element name="Timer"/>
				<element name="ReceiveMessageThreads"/>
			</group>
			<group name="Drawing">
				<element name="PrintText"/>
				<element name="ClearScreen"/>
				<element name="MarkerDown"/>
				<element name="MarkerUp"/>
			</group>
		</palette>
	</diagram>
</metamodel>
