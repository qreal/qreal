@@callingPath@@
SUBDIRS = \
	constraints@@metaModelName@@/@@fileNamePRO@@ \
==========
@@diagramName@@
@@languageName@@_@@id@@
==========
@@elementNameWithId@@
@@elementName@@_@@id@@
==========
@@constraintsDiagramHFile@@
	constraints@@diagramName@@.h \
==========
@@constraintsDiagramCppFile@@
	constraints@@diagramName@@.cpp \
==========
@@includeConstraintsDiagramFile@@
#include "constraints@@diagramName@@.h"
==========
@@privateFieldOfConstraintsDigram@@
	Constraints@@diagramName@@ mConstraints@@diagramName@@;
==========
@@ifForMainCheckOfConstraintsDiagram@@
	if (((mConstraints@@diagramName@@.languageName() == languageName) || (mConstraints@@diagramName@@.languageName() == "@@keywordForAllLanguages@@")) && (mConstraints@@diagramName@@.elementsNames().contains("@@keywordForAllEdges@@") || mConstraints@@diagramName@@.elementsNames().contains("@@keywordForAllNodes@@") || mConstraints@@diagramName@@.elementsNames().contains(elementName))) {
		checkings.append(mConstraints@@diagramName@@.check(element, logicalApi, editorManager));
	}
==========
@@optionalCheckElemet@@
	qReal::CheckStatus check@@elementNameWithId@@(qReal::Id const &element, qrRepo::LogicalRepoApi const &logicalApi);
==========
@@mainCheckElemet@@
	QList<qReal::CheckStatus> check@@elementName@@(qReal::Id const &element, qrRepo::LogicalRepoApi const &logicalApi);
==========
@@addElementInElementsNames@@
	elementsList.append("@@elementName@@");
==========
@@prefixForReturnCheckStatusOfElementByMetaTypeInCheck@@
	qReal::EditorManagerInterface::MetaType isNodeOrEdge = mEditorManager->metaTypeOfElement(element);
==========
@@returnCheckStatusOfElementInCheck@@
	if (element.element() == "@@elementName@@") {
		checkings.append(check@@elementName@@(element, logicalApi));
	}
==========
@@returnCheckStatusOfElementByMetaTypeInCheck@@
	if(isNodeOrEdge == qReal::EditorManagerInterface::@@metaType@@) {
		checkings.append(check@@elementName@@(element, logicalApi));
	}
==========
@@countOptionalCheckStatusOfElemet@@
qReal::CheckStatus Constraints@@diagramName@@::check@@elementNameWithId@@(qReal::Id const &element, qrRepo::LogicalRepoApi const &logicalApi)
{
	bool res = true;
	@@countRealCheckStatusOfElement@@
	return qReal::CheckStatus(res, "@@errorText@@", qReal::CheckStatus::@@checkStatus@@);
}
==========
@@countMainCheckStatusOfElemet@@
QList<qReal::CheckStatus> Constraints@@diagramName@@::check@@elementName@@(qReal::Id const &element, qrRepo::LogicalRepoApi const &logicalApi)
{
	QList<qReal::CheckStatus> checkings;
@@appendOptionalCheckStatusesOfElement@@
	return qReal::CheckStatus::resultCheckStatusList(checkings);
}
==========
@@appendOptionalCheckStatusOfElement@@
	checkings.append(check@@elementNameWithId@@(element, logicalApi));
==========